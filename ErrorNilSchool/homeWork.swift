
/*
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 1: Описание структур SportCar и TrunkCar

 Описание: Создайте две структуры, представляющие разные типы автомобилей: спортивный автомобиль и грузовик.

 Требования:

 Каждая структура должна включать следующие свойства: марку авто, год выпуска, объем багажника/кузова, состояние двигателя (запущен/остановлен), состояние окон (открыты/закрыты), текущий объем багажника.
 Подсказки:

 Рассмотрите использование Bool для свойств состояния двигателя и окон.
 
 Ожидаемый результат:
 Две структуры с требуемыми свойствами и их типами данных.
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 2: Создание перечисления действий с автомобилем

 Описание: Определите перечисление, которое содержит различные действия, которые могут быть предприняты с автомобилем.

 Требования:

 Включите следующие действия: запустить/остановить двигатель, открыть/закрыть окна, погрузить/выгрузить груз определенного объема.
 Подсказки:

 Учитывайте, что действия по загрузке/выгрузке должны учитывать доступный объем багажника/кузова.
 
 Ожидаемый результат:
 Перечисление, в котором содержатся все необходимые действия с автомобилем.
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 3: Добавление метода для изменения свойств автомобиля

 Описание: В каждую структуру добавьте метод, который принимает один аргумент типа перечисления и изменяет свойства структуры в соответствии с действием.

 Требования:

 Метод должен корректно обрабатывать каждое действие из перечисления.
 Убедитесь, что метод обновляет свойства структуры соответствующим образом.
 Подсказки:

 Внимательно обработайте ситуации, когда действие невозможно выполнить из-за текущего состояния объекта (например, погрузка груза превышает доступный объем).
 
 Ожидаемый результат:
 Метод в каждой структуре, который принимает действие в виде перечисления и модифицирует свойства структуры соответствующим образом. 
 Метод может выводить результат действия в консоль (например, "Двигатель запущен" или "Недостаточно места в багажнике").
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 4: Инициализация и использование структур

 Описание: Инициализируйте несколько экземпляров каждой структуры и выполните различные действия с ними, используя метод из предыдущего задания.

 Требования:

 Создайте различные объекты каждой структуры и примените к ним различные действия из перечисления.
 Подсказки:

 Обратите внимание на то, как изменяется состояние объекта после каждого действия и проверьте его, выводя свойства объекта в консоль.
 
 Ожидаемый результат:
 Код, который создает несколько экземпляров каждой структуры и вызывает их методы, передавая различные действия из перечисления.
 //----------------------------------------------------------------------------------------------------------
 
 Задание 5: Вывод свойств объектов

 Описание: Выведите в консоль свойства каждого созданного объекта.

 Требования:

 После выполнения действий над объектами, выведите актуальные данные об их свойствах.
 Подсказки:

 Можете использовать функцию print в Swift для вывода данных в консоль.
 
 Ожидаемый результат:
 Код, который создает несколько экземпляров каждой структуры и вызывает их методы, передавая различные действия из перечисления.
 */
