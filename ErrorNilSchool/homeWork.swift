
/*
 
 //----------------------------------------------------------------------------------------------------------------------------------

 1 -  Задание: Времена года и их температура

 Описание: Создайте приложение, которое отображает среднюю температуру для различных времен года.

 Требования:

 Перечисление "Времена года»: Создайте перечисление Season с четырьмя вариантами: Winter, Spring, Summer и Fall.

 Средняя температура: Каждому времени года должна соответствовать средняя температура. Используйте свойство вычисляемого типа (computed property) для этой цели.

 Вывод температуры: Реализуйте функцию, которая выводит среднюю температуру для выбранного времени года.

 Ожидаемый результат: При запуске приложения можно получить среднюю температуру для любого из четырех времен года.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 2 -  Задание: Информация о транспортных средствах

 Описание: Создайте приложение, которое предоставляет информацию о различных видах транспортных средств, таких как их максимальная скорость.

 Требования:

 Перечисление "Транспорт":  Создайте перечисление Transport с различными типами транспортных средств, такими как автомобиль, велосипед, поезд и самолет.

 Максимальная скорость: Для каждого транспортного средства укажите его максимальную скорость. Используйте ассоциативные значения для этой цели.

 Вывод информации: Реализуйте функцию, которая выводит максимальную скорость для выбранного транспортного средства.

 Ожидаемый результат: Пользователь может узнать максимальную скорость любого из указанных транспортных средств.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 3 -  Задание: Статусы платежей

 Описание: Создайте систему учета статусов платежей, которая позволяет отслеживать различные этапы обработки платежа.

 Требования:

 Перечисление "Статус платежа»: Создайте перечисление PaymentStatus со статусами: Неоплачено, В обработке, Оплачено, Ошибка.

 Дополнительная информация: Некоторые статусы требуют дополнительной информации. Например, для оплаченного статуса нужна дата оплаты, а для статуса ошибки - сообщение об ошибке. Используйте ассоциативные значения для сохранения этой информации.

 Вывод информации: Реализуйте функционал, который позволяет пользователю узнать дату оплаты для определенного платежа или причину ошибки.

 Ожидаемый результат: Пользователь может узнать детали каждого платежа в зависимости от его статуса.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 4 -  Задание: Рекомендации по режимам камеры

 Описание: Создайте систему, которая дает рекомендации по использованию различных режимов камеры.

 Требования:

 Перечисление "Режим камеры»: Создайте перечисление CameraMode с режимами: Авто, Портрет, Ландшафт, Ночной.

 Рекомендации: Для каждого режима предоставьте рекомендацию, когда и как лучше его использовать.

 Получение рекомендации: Реализуйте функционал, который позволяет пользователю получить рекомендацию для выбранного режима камеры.

 Ожидаемый результат: При выборе определенного режима камеры пользователь получает рекомендацию по его использованию.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 5 - Задание: Диеты животных в зоопарке

 Описание: Создайте информационную систему о типах животных в зоопарке и их предпочтениях в пище.

 Требования:

 Перечисление "Тип животного»: Создайте перечисление AnimalType с типами: Хищник, Травоядное, Насекомое.

 Диета: Укажите, что ест каждый тип животного.

 Получение информации о диете: Реализуйте функционал, который позволяет узнать, что ест определенное животное.

 Ожидаемый результат:  Пользователь может узнать, что ест определенное животное в зоопарке.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 6 - Задание: Отслеживание статуса заказа в ресторане

 Описание: Разработайте систему, которая позволяет отслеживать статус приготовления заказа в ресторане.

 Требования:

 Перечисление "Статус заказа»: Создайте перечисление OrderStatus со статусами: Принят, Готовится, Готов к подаче, Доставляется.

 Следующий статус: Реализуйте функционал, который показывает, какой статус будет следующим после текущего.

 Получение следующего статуса: Пользователь может узнать, какой статус будет следующим для его заказа.

 Ожидаемый результат: Пользователь может отслеживать, на каком этапе находится его заказ.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 7 - Задание: Информация о номерах в отеле

 Описание: Создайте систему, которая предоставляет информацию о различных типах номеров в отеле.

 Требования:

 Перечисление "Тип комнаты»: Создайте перечисление RoomType с типами номеров: Одноместный, Двухместный, Люкс.

 Информация о комнате: Для каждого типа комнаты укажите его стоимость и количество доступных номеров.

 Получение информации о комнате: Пользователь может узнать стоимость и количество доступных номеров для выбранного типа комнаты.

 Ожидаемый результат: Пользователь может узнать детали о различных типах номеров в отеле.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 8 - Задание: Уровни сложности в игре

 Описание: Разработайте систему, которая позволяет определить параметры игры на основе выбранного уровня сложности.

 Требования:

 Перечисление "Уровень сложности»: Создайте перечисление DifficultyLevel с уровнями: Легкий, Средний, Тяжелый, Эксперт.

 Параметры игры: Укажите количество врагов и временные ограничения для каждого уровня сложности.

 Получение параметров: Реализуйте функционал, который позволяет пользователю узнать параметры игры для выбранного уровня сложности.

 Ожидаемый результат: Пользователь может узнать, сколько врагов и какое временное ограничение установлено для выбранного уровня сложности.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 9 - Задание: Прогноз погоды по облачности

 Описание: Создайте систему, которая предоставляет информацию о вероятности осадков на основе уровня облачности.

 Требования:

 Перечисление "Облачность»: Создайте перечисление Cloudiness с уровнями: Ясно, Частичная облачность, Облачно, Пасмурно.

 Вероятность осадков: Укажите вероятность осадков для каждого уровня облачности.

 Получение прогноза: Реализуйте функционал, который позволяет пользователю узнать вероятность осадков для выбранного уровня облачности.

 Ожидаемый результат: Пользователь может узнать вероятность осадков, основываясь на текущем уровне облачности.
 
 //----------------------------------------------------------------------------------------------------------------------------------

 10 - Задание: Цены напитков в автомате

 Описание: Создайте систему, которая предоставляет информацию о стоимости различных напитков, доступных в автомате.

 Требования:

 Перечисление "Тип напитка»: Создайте перечисление DrinkType с напитками: Кофе, Чай, Горячий шоколад, Вода.

 Стоимость напитка: Укажите стоимость каждого напитка.

 Получение цены: Реализуйте функционал, который позволяет пользователю узнать стоимость выбранного напитка.

 Ожидаемый результат: Пользователь может узнать стоимость напитка перед тем, как совершить покупку в автомате.

 */
