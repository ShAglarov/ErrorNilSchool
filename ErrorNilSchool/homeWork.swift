
/*
 Задание 1: Создание класса Car

 Описание: Опишите класс "Car", включающий общие свойства автомобилей и пустой метод действия.

 Требования:

 Определите общие свойства для автомобилей (например, марка, модель, год выпуска и т. д.)
 Включите пустой метод действия.
 Подсказки:

 Не забудьте использовать конструктор для инициализации свойств.
 
 Ожидаемый результат:
 Класс Car, который содержит общие свойства автомобилей и пустой метод действия.
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 2: Создание подклассов TrunkCar и SportCar

 Описание: Определите два подкласса "TrunkCar" и "SportCar", которые наследуют свойства и методы класса "Car" и добавляют свои уникальные характеристики.

 Требования:

 Определите специфические свойства для каждого подкласса.
 Подумайте о том, какими уникальными свойствами и методами могут обладать эти подклассы.
 
 Подсказки:
 Например, для "SportCar" могут быть свойства, связанные с максимальной скоростью, а для "TrunkCar" – с грузоподъемностью.
 
 Ожидаемый результат:
 Два класса, каждый из которых наследуется от Car и имеет дополнительные свойства, характерные для каждого типа автомобиля (например, максимальная грузоподъемность для TrunkCar и максимальная скорость для SportCar).
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 3: Расширение enum с действиями

 Описание: Возьмите перечисление (enum) с действиями над автомобилем из прошлого задания и добавьте действия, специфичные для "TrunkCar" и "SportCar".

 Требования:

 Добавьте в перечисление дополнительные действия для каждого подкласса.
 
 Подсказки:
 Подумайте, какие действия могут быть особенно релевантны для грузовых и спортивных автомобилей.
 
 Ожидаемый результат:
 Перечисление CarAction из предыдущего задания, дополненное действиями, специфичными для TrunkCar и SportCar.
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 4: Переопределение методов в подклассах

 Описание: Переопределите метод действия в каждом подклассе, чтобы он соответствовал специфике объекта.

 Требования:

 Удостоверьтесь, что метод действия в каждом подклассе адекватно отражает специфичные действия для этого класса.
 Подсказки:
 Используйте ключевое слово override для переопределения методов в подклассах.
 
 Ожидаемый результат:
 Метод действия в TrunkCar и SportCar, каждый из которых реализует дейст    вия, связанные со специфическими свойствами этих подклассов.
 
 //----------------------------------------------------------------------------------------------------------
 
 Задание 5: Создание объектов и выполнение действий

 Описание: Создайте несколько объектов каждого подкласса и выполните различные действия с ними.

 Требования:

 Создайте экземпляры каждого подкласса и проведите с ними различные операции, используя определенные методы.
 
 Подсказки:
 Вы можете использовать циклы и условные операторы для выполнения различных действий с объектами.
 Задание: Вывод свойств объектов

 Описание: Выведите в консоль свойства каждого созданного объекта.

 Требования:

 Используйте метод вывода для показа свойств каждого объекта.
 
 Подсказки:
 Обращайтесь к свойствам объектов напрямую или используйте getter-методы, если свойства закрыты.\
 
 Ожидаемый результат:
 Код, который создает экземпляры TrunkCar и SportCar и вызывает их методы действия, передавая различные значения из перечисления CarAction.
 и который выводит актуальные свойства каждого объекта в консоль.
 Вывод может быть структурирован для лучшего понимания (например, "Марка: Ferrari, Год: 2022, Объем багажника: 150").
 */
